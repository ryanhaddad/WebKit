import * as assert from '../assert.js';

/*
(module
    (tag $e (param i32))
    (func $get_exnref (result (ref null exn))
        (block $b (result (ref null exn))
            (try_table (result (ref null exn))
              (catch_all_ref $b)
                (i32.const 0)
                (throw $e)
                (unreachable)
            )
        )
    )
    (func (export "main")
        (block (result (ref null exn))
        (call $get_exnref))
        (ref.cast (ref null exn))
        (drop)
    )
)
*/
let code = new Uint8Array([
    0x00,0x61,0x73,0x6d,0x01,0x00,0x00,0x00,0x01,0x8c,0x80,0x80,0x80,0x00,0x03,0x60,0x01,0x7f,0x00,0x60,0x00,0x01,0x69,0x60,0x00,0x00,0x03,0x83,0x80,0x80,0x80,0x00,0x02,0x01,0x02,0x0d,0x83,0x80,0x80,0x80,0x00,0x01,0x00,0x00,0x07,0x88,0x80,0x80,0x80,0x00,0x01,0x04,0x6d,0x61,0x69,0x6e,0x00,0x01,0x0a,0xa6,0x80,0x80,0x80,0x00,0x02,0x90,0x80,0x80,0x80,0x00,0x00,0x02,0x69,0x1f,0x69,0x01,0x03,0x00,0x41,0x00,0x08,0x00,0x00,0x0b,0x0b,0x0b,0x8b,0x80,0x80,0x80,0x00,0x00,0x02,0x69,0x10,0x00,0x0b,0xfb,0x17,0x69,0x1a,0x0b
]);
let module = new WebAssembly.Module(code);
let instance = new WebAssembly.Instance(module);

const { main } = instance.exports;

main();

