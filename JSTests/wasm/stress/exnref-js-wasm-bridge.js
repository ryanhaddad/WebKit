import * as assert from '../assert.js'

/*
(module
  (func (export "trigger") (param exnref)
    (throw_ref (local.get 0))
  )
)
*/
const WASM_MODULE_CODE = new Uint8Array([0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x05, 0x01, 0x60, 0x01, 0x69, 0x00, 0x03, 0x02, 0x01, 0x00, 0x07, 0x0b, 0x01, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x00, 0x00, 0x0a, 0x07, 0x01, 0x05, 0x00, 0x20, 0x00, 0x0a, 0x0b]);

assert.throws(() => {
    const instance = new WebAssembly.Instance(new WebAssembly.Module(WASM_MODULE_CODE), {});
    instance.exports.trigger(0x1234);
}, TypeError, `an exported wasm function cannot contain an invalid parameter or return value`);
