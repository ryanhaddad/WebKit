function instantiate(moduleBase64, importObject) {
    let bytes = Uint8Array.fromBase64(moduleBase64);
    return WebAssembly.instantiate(bytes, importObject);
  }
  const report = $.agent.report;
  const isJIT = callerIsBBQOrOMGCompiled;
const extra = {isJIT};
(async function () {
/**
@param {FuncRef} a0
@param {I64} a1
@returns {[I64, FuncRef, FuncRef]}
 */
let fn0 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [1840n, a0, a0];
};
/**
@param {I32} a0
@param {FuncRef} a1
@returns {[I32, FuncRef]}
 */
let fn1 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [66, a1];
};
/**
@param {I32} a0
@param {FuncRef} a1
@returns {FuncRef}
 */
let fn2 = function (a0, a1) {
a0?.toString(); a1?.toString();
return a1;
};
/**
@param {FuncRef} a0
@param {I64} a1
@returns {[I64, FuncRef, FuncRef]}
 */
let fn3 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [1451n, a0, a0];
};
/**
@param {I32} a0
@param {FuncRef} a1
@returns {[I32, FuncRef]}
 */
let fn4 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [83, a1];
};
/**
@param {FuncRef} a0
@param {I64} a1
@returns {[I64, FuncRef, FuncRef]}
 */
let fn5 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [1325n, a0, a0];
};
/**
@param {FuncRef} a0
@param {I64} a1
@returns {[I64, FuncRef, FuncRef]}
 */
let fn6 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [1669n, a0, a0];
};
/**
@param {I32} a0
@param {FuncRef} a1
@returns {[I32, FuncRef]}
 */
let fn7 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [56, a1];
};
let tag6 = new WebAssembly.Tag({parameters: ['anyfunc', 'i64']});
let tag7 = new WebAssembly.Tag({parameters: ['anyfunc', 'i64']});
let tag9 = new WebAssembly.Tag({parameters: ['i32', 'anyfunc']});
let global0 = new WebAssembly.Global({value: 'i64', mutable: true}, 440044811n);
let table0 = new WebAssembly.Table({initial: 84, element: 'externref', maximum: 859});
let table2 = new WebAssembly.Table({initial: 39, element: 'externref', maximum: 210});
let table3 = new WebAssembly.Table({initial: 20, element: 'externref', maximum: 202});
let table7 = new WebAssembly.Table({initial: 86, element: 'externref'});
let table8 = new WebAssembly.Table({initial: 27, element: 'anyfunc', maximum: 687});
let m2 = {fn0, fn7, table3, table5: table0, tag8: tag6};
let m0 = {fn1, fn2, fn3, fn6, global0, table0, table2, table6: table0, table7, table8, tag6, tag9, tag12: tag9, tag13: tag9, tag14: tag9};
let m1 = {fn4, fn5, table1: table0, table4: table0, tag7, tag10: tag9, tag11: tag7};
let importObject0 = /** @type {Imports2} */ ({m0, m1, m2});
let i0 = await instantiate('', importObject0);
let {fn8, global1, global2, global3, global4, memory0, table9, tag0, tag1, tag2, tag3, tag4, tag5} = /**
  @type {{
fn8: (a0: I32, a1: FuncRef) => [I32, FuncRef],
global1: WebAssembly.Global,
global2: WebAssembly.Global,
global3: WebAssembly.Global,
global4: WebAssembly.Global,
memory0: WebAssembly.Memory,
table9: WebAssembly.Table,
tag0: WebAssembly.Tag,
tag1: WebAssembly.Tag,
tag2: WebAssembly.Tag,
tag3: WebAssembly.Tag,
tag4: WebAssembly.Tag,
tag5: WebAssembly.Tag
  }} */ (i0.instance.exports);
table0.set(41, table9);
table9.set(65, table0);
table0.set(39, table7);
table7.set(30, table2);
table7.set(36, table0);
table9.set(59, table0);
table0.set(28, table2);
table0.set(35, table3);
table9.set(10, table2);
table9.set(60, table2);
global3.value = 0;
global0.value = 0n;
report('progress');
try {
  for (let k=0; k<20; k++) {
  let zzz = fn8(global3.value, fn8);
  if (!(zzz instanceof Array)) { throw new Error('expected array but return value is '+zzz); }
if (zzz.length != 2) { throw new Error('expected array of length 2 but return value is '+zzz); }
let [r0, r1] = zzz;
r0?.toString(); r1?.toString();
  }
} catch (e) {
  if (e instanceof WebAssembly.Exception) {
  } else if (e instanceof TypeError) {
  if (e.message === 'an exported wasm function cannot contain a v128 parameter or return value') {} else { throw e; }
  } else if (e instanceof WebAssembly.RuntimeError || e instanceof RangeError) {} else { throw e; }
}
report('progress');
try {
  for (let k=0; k<28; k++) {
  let zzz = fn8(k, fn8);
  if (!(zzz instanceof Array)) { throw new Error('expected array but return value is '+zzz); }
if (zzz.length != 2) { throw new Error('expected array of length 2 but return value is '+zzz); }
let [r0, r1] = zzz;
r0?.toString(); r1?.toString();
  }
} catch (e) {
  if (e instanceof WebAssembly.Exception) {
  } else if (e instanceof TypeError) {
  if (e.message === 'an exported wasm function cannot contain a v128 parameter or return value') {} else { throw e; }
  } else if (e instanceof WebAssembly.RuntimeError || e instanceof RangeError) {} else { throw e; }
}
let tables = [table2, table3, table0, table7, table9, table8];
for (let table of tables) {
for (let k=0; k < table.length; k++) { table.get(k)?.toString(); }
}
})().then(() => {
  report('after');
}).catch(e => {
  report('error');
})
